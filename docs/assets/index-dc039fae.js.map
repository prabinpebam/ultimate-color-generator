{"version":3,"file":"index-dc039fae.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/context/ThemeContext.tsx","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/algorithms/generation/seedBased.ts","../../src/algorithms/generation/semantic.ts","../../src/context/HistoryContext.tsx","../../src/context/PaletteContext.tsx","../../src/context/SettingsContext.tsx","../../src/components/layout/Header.tsx","../../src/components/layout/Sidebar.tsx","../../src/pages/GeneratePage.tsx","../../src/hooks/usePalette.ts","../../src/components/preview/WebpageMock.tsx","../../src/components/preview/DashboardMock.tsx","../../src/components/preview/MobileMock.tsx","../../src/components/preview/EmailMock.tsx","../../src/components/export/ExportDrawer.tsx","../../src/components/export/ExportButton.tsx","../../src/pages/PreviewPage.tsx","../../src/pages/NotFound.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ntype ThemeType = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  theme: ThemeType;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType>({\r\n  theme: 'light',\r\n  toggleTheme: () => {}\r\n});\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\r\n  const [theme, setTheme] = useState<ThemeType>(() => {\r\n    // Check if theme is stored in localStorage\r\n    const savedTheme = localStorage.getItem('theme') as ThemeType | null;\r\n    if (savedTheme) {\r\n      return savedTheme;\r\n    }\r\n    \r\n    // Use system preference as default\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  });\r\n  \r\n  useEffect(() => {\r\n    // Update data-theme attribute when theme changes\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n    \r\n    // Save theme preference to localStorage\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n  \r\n  const toggleTheme = () => {\r\n    setTheme(current => current === 'light' ? 'dark' : 'light');\r\n  };\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { HSLColor, HarmonyType } from '../../types/color';\r\n\r\n/**\r\n * Generates a palette from a seed color using color harmony principles\r\n * \r\n * @param seedColor - Base HSL color to build palette around\r\n * @param paletteSize - Number of colors to generate\r\n * @param harmonyType - Type of color harmony to use\r\n * @returns Array of HSL colors forming a palette\r\n */\r\nexport function generatePaletteFromSeed(\r\n  seedColor: HSLColor,\r\n  paletteSize: number = 5,\r\n  harmonyType: HarmonyType = 'analogous'\r\n): HSLColor[] {\r\n  // Use the appropriate harmony function based on the type\r\n  let baseColors: HSLColor[] = [];\r\n  const [h, s, l] = seedColor;\r\n  \r\n  switch (harmonyType) {\r\n    case 'complementary':\r\n      baseColors = [\r\n        seedColor, \r\n        [(h + 180) % 360, s, l]\r\n      ];\r\n      break;\r\n    case 'analogous':\r\n      baseColors = generateAnalogousColors(seedColor, Math.min(paletteSize, 5));\r\n      break;\r\n    case 'triadic':\r\n      baseColors = [\r\n        seedColor,\r\n        [(h + 120) % 360, s, l],\r\n        [(h + 240) % 360, s, l]\r\n      ];\r\n      break;\r\n    case 'tetradic':\r\n      baseColors = [\r\n        seedColor,\r\n        [(h + 90) % 360, s, l],\r\n        [(h + 180) % 360, s, l],\r\n        [(h + 270) % 360, s, l]\r\n      ];\r\n      break;\r\n    case 'splitComplementary':\r\n      baseColors = [\r\n        seedColor,\r\n        [(h + 150) % 360, s, l],\r\n        [(h + 210) % 360, s, l]\r\n      ];\r\n      break;\r\n    case 'monochromatic':\r\n      baseColors = generateMonochromaticColors(seedColor, paletteSize);\r\n      break;\r\n    default:\r\n      baseColors = [seedColor];\r\n  }\r\n  \r\n  // If we need more colors than the base harmony provides\r\n  if (paletteSize > baseColors.length) {\r\n    // Create variations by adjusting lightness\r\n    const additionalCount = paletteSize - baseColors.length;\r\n    const additionalColors = generateVariations(baseColors, additionalCount);\r\n    return [...baseColors, ...additionalColors];\r\n  }\r\n  \r\n  // If we need fewer colors, return just what we need\r\n  return baseColors.slice(0, paletteSize);\r\n}\r\n\r\n/**\r\n * Generate analogous colors (adjacent on the color wheel)\r\n */\r\nfunction generateAnalogousColors(seedColor: HSLColor, count: number): HSLColor[] {\r\n  const [h, s, l] = seedColor;\r\n  const colors: HSLColor[] = [seedColor];\r\n  const angle = 30; // Degree spacing\r\n  \r\n  // Half the colors will be on each side of the seed color\r\n  const sideCount = Math.floor((count - 1) / 2);\r\n  \r\n  // Generate colors on one side\r\n  for (let i = 1; i <= sideCount; i++) {\r\n    colors.push([(h + angle * i) % 360, s, l]);\r\n  }\r\n  \r\n  // Generate colors on the other side\r\n  for (let i = 1; i <= count - 1 - sideCount; i++) {\r\n    colors.unshift([(h - angle * i + 360) % 360, s, l]);\r\n  }\r\n  \r\n  return colors;\r\n}\r\n\r\n/**\r\n * Generate monochromatic colors (variations in lightness)\r\n */\r\nfunction generateMonochromaticColors(seedColor: HSLColor, count: number): HSLColor[] {\r\n  const [h, s] = seedColor;\r\n  const colors: HSLColor[] = [];\r\n  \r\n  // Create variations with different lightness levels\r\n  for (let i = 0; i < count; i++) {\r\n    // Distribute lightness from 20% to 80%\r\n    const lightness = 20 + (i / (count - 1)) * 60;\r\n    colors.push([h, s, lightness]);\r\n  }\r\n  \r\n  return colors;\r\n}\r\n\r\n/**\r\n * Generate additional color variations when needed\r\n */\r\nfunction generateVariations(baseColors: HSLColor[], count: number): HSLColor[] {\r\n  const variations: HSLColor[] = [];\r\n  \r\n  for (let i = 0; i < count; i++) {\r\n    // Use baseColor as template, cycling through the available ones\r\n    const baseColor = baseColors[i % baseColors.length];\r\n    const [h, s, l] = baseColor;\r\n    \r\n    // Alternate between lighter and darker variations\r\n    const lightnessAdjustment = (i % 2 === 0) ? 15 : -15;\r\n    const newLightness = Math.max(10, Math.min(90, l + lightnessAdjustment));\r\n    \r\n    variations.push([h, s, newLightness]);\r\n  }\r\n  \r\n  return variations;\r\n}\r\n","import { HSLColor, HarmonyType, SemanticMapping } from '../../types/color';\r\nimport { generatePaletteFromSeed } from './seedBased';\r\n\r\n/**\r\n * Semantic mappings from descriptive terms to color attributes\r\n */\r\nexport const SEMANTIC_MAPPINGS: Record<string, SemanticMapping> = {\r\n  // Mood/tone mappings\r\n  'calm': {\r\n    hueRange: [180, 240], // Cyan to blue\r\n    saturationRange: [30, 60],\r\n    lightnessRange: [50, 70]\r\n  },\r\n  'energetic': {\r\n    hueRange: [0, 60], // Red to yellow\r\n    saturationRange: [80, 100],\r\n    lightnessRange: [50, 65]\r\n  },\r\n  'professional': {\r\n    hueRange: [200, 240], // Blue range\r\n    saturationRange: [30, 70],\r\n    lightnessRange: [40, 60]\r\n  },\r\n  // Style mappings\r\n  'vintage': {\r\n    hueRange: [20, 40], // Browns/oranges\r\n    saturationRange: [20, 50],\r\n    lightnessRange: [40, 60]\r\n  },\r\n  'minimalist': {\r\n    hueRange: [0, 360], // Any hue\r\n    saturationRange: [0, 30],\r\n    lightnessRange: [40, 95]\r\n  },\r\n  // Feel mappings\r\n  'warm': {\r\n    hueRange: [0, 60], // Red to yellow\r\n    saturationRange: [50, 100],\r\n    lightnessRange: [40, 70]\r\n  },\r\n  'cool': {\r\n    hueRange: [180, 270], // Cyan to purple\r\n    saturationRange: [40, 80],\r\n    lightnessRange: [40, 70]\r\n  },\r\n  'vibrant': {\r\n    hueRange: [0, 360], // Any hue\r\n    saturationRange: [80, 100],\r\n    lightnessRange: [45, 65]\r\n  },\r\n  'muted': {\r\n    hueRange: [0, 360], // Any hue\r\n    saturationRange: [20, 50],\r\n    lightnessRange: [40, 70]\r\n  },\r\n  'dark': {\r\n    hueRange: [0, 360], // Any hue\r\n    saturationRange: [40, 80],\r\n    lightnessRange: [15, 35]\r\n  },\r\n  'light': {\r\n    hueRange: [0, 360], // Any hue\r\n    saturationRange: [20, 60],\r\n    lightnessRange: [70, 95]\r\n  },\r\n  'earthy': {\r\n    hueRange: [20, 150], // Browns, greens\r\n    saturationRange: [20, 60],\r\n    lightnessRange: [30, 60]\r\n  },\r\n  'sophisticated': {\r\n    hueRange: [270, 330], // Purples\r\n    saturationRange: [30, 50],\r\n    lightnessRange: [20, 50]\r\n  }\r\n};\r\n\r\n/**\r\n * Mapping from semantic terms to harmony types\r\n */\r\nconst HARMONY_MAPPINGS: Record<string, HarmonyType> = {\r\n  'energetic': 'complementary',\r\n  'vibrant': 'triadic',\r\n  'balanced': 'tetradic',\r\n  'calm': 'analogous',\r\n  'minimalist': 'monochromatic',\r\n  'sophisticated': 'splitComplementary'\r\n};\r\n\r\n/**\r\n * Generates a palette based on semantic terms\r\n * \r\n * @param semanticTerms - Array of semantic descriptors\r\n * @param paletteSize - Number of colors to generate\r\n * @returns Array of HSL colors\r\n */\r\nexport function generatePaletteFromSemantics(\r\n  semanticTerms: string[],\r\n  paletteSize: number\r\n): HSLColor[] {\r\n  // Combine the semantic mappings for all provided terms\r\n  const combinedMapping = combineSemanticMappings(semanticTerms);\r\n  \r\n  // Generate a seed color from the combined mapping\r\n  const seedColor = generateColorFromMapping(combinedMapping);\r\n  \r\n  // Choose a harmony type based on semantic terms\r\n  const harmonyType = determineHarmonyFromSemantics(semanticTerms);\r\n  \r\n  // Generate palette using the seed-based algorithm\r\n  return generatePaletteFromSeed(seedColor, paletteSize, harmonyType);\r\n}\r\n\r\n/**\r\n * Combines multiple semantic mappings into one\r\n * \r\n * @param semanticTerms - Array of semantic descriptor strings\r\n * @returns A single combined semantic mapping\r\n */\r\nfunction combineSemanticMappings(semanticTerms: string[]): SemanticMapping {\r\n  // Default mapping if no valid terms are provided\r\n  if (!semanticTerms.length) {\r\n    return {\r\n      hueRange: [0, 360],\r\n      saturationRange: [50, 100],\r\n      lightnessRange: [40, 60]\r\n    };\r\n  }\r\n  \r\n  let combinedMapping: SemanticMapping = {\r\n    hueRange: [0, 360],\r\n    saturationRange: [0, 100],\r\n    lightnessRange: [0, 100]\r\n  };\r\n  \r\n  // Find intersection of ranges for all valid terms\r\n  let validTermCount = 0;\r\n  \r\n  semanticTerms.forEach(term => {\r\n    if (SEMANTIC_MAPPINGS[term]) {\r\n      validTermCount++;\r\n      \r\n      // If it's our first valid term, just use its mapping\r\n      if (validTermCount === 1) {\r\n        combinedMapping = { ...SEMANTIC_MAPPINGS[term] };\r\n        return;\r\n      }\r\n      \r\n      // Otherwise, find intersection with current mapping\r\n      const mapping = SEMANTIC_MAPPINGS[term];\r\n      \r\n      // For hue, we handle it specially due to the circular nature\r\n      if (isHueRangeNarrower(mapping.hueRange, combinedMapping.hueRange)) {\r\n        combinedMapping.hueRange = mapping.hueRange;\r\n      }\r\n      \r\n      // For saturation and lightness, find the intersection\r\n      combinedMapping.saturationRange = [\r\n        Math.max(combinedMapping.saturationRange[0], mapping.saturationRange[0]),\r\n        Math.min(combinedMapping.saturationRange[1], mapping.saturationRange[1])\r\n      ];\r\n      \r\n      combinedMapping.lightnessRange = [\r\n        Math.max(combinedMapping.lightnessRange[0], mapping.lightnessRange[0]),\r\n        Math.min(combinedMapping.lightnessRange[1], mapping.lightnessRange[1])\r\n      ];\r\n    }\r\n  });\r\n  \r\n  // Ensure the ranges are valid (min <= max)\r\n  if (combinedMapping.saturationRange[0] > combinedMapping.saturationRange[1]) {\r\n    combinedMapping.saturationRange = [50, 70]; // Default fallback\r\n  }\r\n  \r\n  if (combinedMapping.lightnessRange[0] > combinedMapping.lightnessRange[1]) {\r\n    combinedMapping.lightnessRange = [40, 60]; // Default fallback\r\n  }\r\n  \r\n  return combinedMapping;\r\n}\r\n\r\n/**\r\n * Checks if a hue range is narrower than another\r\n * \r\n * @param range1 - First hue range\r\n * @param range2 - Second hue range\r\n * @returns Boolean indicating if range1 is narrower than range2\r\n */\r\nfunction isHueRangeNarrower(\r\n  range1: [number, number],\r\n  range2: [number, number]\r\n): boolean {\r\n  const size1 = range1[0] <= range1[1] \r\n    ? range1[1] - range1[0] \r\n    : 360 - range1[0] + range1[1];\r\n  \r\n  const size2 = range2[0] <= range2[1]\r\n    ? range2[1] - range2[0]\r\n    : 360 - range2[0] + range2[1];\r\n  \r\n  return size1 < size2;\r\n}\r\n\r\n/**\r\n * Generates a color from a semantic mapping\r\n * \r\n * @param mapping - Semantic mapping with ranges for hue, saturation, and lightness\r\n * @returns Random HSL color within the specified ranges\r\n */\r\nfunction generateColorFromMapping(mapping: SemanticMapping): HSLColor {\r\n  // Select a random hue within the range\r\n  let hue: number;\r\n  \r\n  if (mapping.hueRange[0] <= mapping.hueRange[1]) {\r\n    // Standard range\r\n    hue = mapping.hueRange[0] + Math.random() * (mapping.hueRange[1] - mapping.hueRange[0]);\r\n  } else {\r\n    // Wraparound range (e.g., 340 to 20 degrees)\r\n    const totalRange = (360 - mapping.hueRange[0]) + mapping.hueRange[1];\r\n    const randomValue = Math.random() * totalRange;\r\n    hue = (mapping.hueRange[0] + randomValue) % 360;\r\n  }\r\n  \r\n  // Select random saturation and lightness within their ranges\r\n  const saturation = mapping.saturationRange[0] + \r\n                    Math.random() * (mapping.saturationRange[1] - mapping.saturationRange[0]);\r\n  const lightness = mapping.lightnessRange[0] + \r\n                   Math.random() * (mapping.lightnessRange[1] - mapping.lightnessRange[0]);\r\n  \r\n  return [Math.round(hue), Math.round(saturation), Math.round(lightness)];\r\n}\r\n\r\n/**\r\n * Determines the most appropriate harmony type based on semantic terms\r\n * \r\n * @param semanticTerms - Array of semantic descriptors\r\n * @returns The harmony type to use for palette generation\r\n */\r\nfunction determineHarmonyFromSemantics(semanticTerms: string[]): HarmonyType {\r\n  // Check if any terms map directly to a harmony type\r\n  for (const term of semanticTerms) {\r\n    if (HARMONY_MAPPINGS[term]) {\r\n      return HARMONY_MAPPINGS[term];\r\n    }\r\n  }\r\n  \r\n  // Default to analogous as it's generally pleasing\r\n  return 'analogous';\r\n}\r\n","import { createContext, useState, ReactNode, useCallback } from 'react';\r\nimport { Palette } from '../types/palette';\r\n\r\ninterface HistoryContextType {\r\n  history: Palette[];\r\n  currentIndex: number;\r\n  addToHistory: (palette: Palette) => void;\r\n  undo: () => Palette | null;\r\n  redo: () => Palette | null;\r\n  canUndo: boolean;\r\n  canRedo: boolean;\r\n}\r\n\r\nexport const HistoryContext = createContext<HistoryContextType>({\r\n  history: [],\r\n  currentIndex: -1,\r\n  addToHistory: () => {},\r\n  undo: () => null,\r\n  redo: () => null,\r\n  canUndo: false,\r\n  canRedo: false\r\n});\r\n\r\ninterface HistoryProviderProps {\r\n  children: ReactNode;\r\n  maxSize?: number;\r\n}\r\n\r\nexport const HistoryProvider = ({\r\n  children,\r\n  maxSize = 30\r\n}: HistoryProviderProps) => {\r\n  const [history, setHistory] = useState<Palette[]>([]);\r\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\r\n  \r\n  const addToHistory = useCallback((palette: Palette) => {\r\n    setHistory(prev => {\r\n      // Remove any future history if we're not at the end\r\n      const newHistory = prev.slice(0, currentIndex + 1);\r\n      \r\n      // Add the new palette\r\n      const updatedHistory = [...newHistory, { ...palette }];\r\n      \r\n      // Trim history if it exceeds max size\r\n      if (updatedHistory.length > maxSize) {\r\n        return updatedHistory.slice(updatedHistory.length - maxSize);\r\n      }\r\n      \r\n      return updatedHistory;\r\n    });\r\n    \r\n    setCurrentIndex(prev => Math.min(prev + 1, maxSize - 1));\r\n  }, [currentIndex, maxSize]);\r\n  \r\n  const undo = useCallback(() => {\r\n    if (currentIndex <= 0) {\r\n      return null;\r\n    }\r\n    \r\n    const newIndex = currentIndex - 1;\r\n    setCurrentIndex(newIndex);\r\n    return history[newIndex];\r\n  }, [currentIndex, history]);\r\n  \r\n  const redo = useCallback(() => {\r\n    if (currentIndex >= history.length - 1) {\r\n      return null;\r\n    }\r\n    \r\n    const newIndex = currentIndex + 1;\r\n    setCurrentIndex(newIndex);\r\n    return history[newIndex];\r\n  }, [currentIndex, history]);\r\n  \r\n  return (\r\n    <HistoryContext.Provider\r\n      value={{\r\n        history,\r\n        currentIndex,\r\n        addToHistory,\r\n        undo,\r\n        redo,\r\n        canUndo: currentIndex > 0,\r\n        canRedo: currentIndex < history.length - 1\r\n      }}\r\n    >\r\n      {children}\r\n    </HistoryContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useState, ReactNode, useCallback, useContext } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { ColorWithId, HSLColor, HarmonyType, RGBColor } from '../types/color'\r\nimport { Palette, PaletteGenerationOptions, PaletteAdjustmentOptions } from '../types/palette'\r\nimport { UIColorRoleAssignments } from '../types/uiRoles'\r\nimport { generatePaletteFromSeed } from '../algorithms/generation/seedBased'\r\nimport { generatePaletteFromSemantics } from '../algorithms/generation/semantic'\r\nimport { hslToRGB, rgbToHSL } from '../algorithms/colorModels/conversions'\r\nimport { rgbToHex } from '../algorithms/colorModels/rgb'\r\nimport { rgbToLAB } from '../algorithms/colorModels/conversions'\r\nimport { HistoryContext } from './HistoryContext'\r\n\r\ninterface PaletteContextType {\r\n  currentPalette: Palette\r\n  generateNewPalette: (options: PaletteGenerationOptions) => void\r\n  regeneratePalette: (options: Partial<PaletteGenerationOptions>) => void\r\n  updateColor: (colorId: string, color: Partial<ColorWithId>) => void\r\n  lockColor: (colorId: string, locked: boolean) => void\r\n  updateRoleAssignments: (assignments: UIColorRoleAssignments) => void\r\n  roleAssignments: UIColorRoleAssignments\r\n  reorderColors: (startIndex: number, endIndex: number) => void\r\n  // Add missing methods\r\n  updatePalette: (palette: Palette) => void\r\n  setCurrentPalette: (palette: Palette) => void\r\n}\r\n\r\nexport const PaletteContext = createContext<PaletteContextType>({\r\n  currentPalette: {\r\n    id: '',\r\n    name: '',\r\n    colors: [],\r\n    harmony: 'analogous',\r\n    timestamp: 0\r\n  },\r\n  generateNewPalette: () => {},\r\n  regeneratePalette: () => {},\r\n  updateColor: () => {},\r\n  lockColor: () => {},\r\n  updateRoleAssignments: () => {},\r\n  roleAssignments: {},\r\n  reorderColors: () => {},\r\n  updatePalette: () => {},\r\n  setCurrentPalette: () => {}\r\n})\r\n\r\ninterface PaletteProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport const PaletteProvider = ({ children }: PaletteProviderProps) => {\r\n  const { addToHistory } = useContext(HistoryContext)\r\n  \r\n  const [currentPalette, setCurrentPalette] = useState<Palette>({\r\n    id: uuidv4(),\r\n    name: 'New Palette',\r\n    colors: [],\r\n    harmony: 'analogous',\r\n    timestamp: Date.now()\r\n  })\r\n  \r\n  const [roleAssignments, setRoleAssignments] = useState<UIColorRoleAssignments>({})\r\n  \r\n  const createColorWithId = (hsl: HSLColor): ColorWithId => {\r\n    const rgb = hslToRGB(hsl)\r\n    return {\r\n      id: uuidv4(),\r\n      rgb,\r\n      hex: rgbToHex(rgb),\r\n      hsl,\r\n      lab: rgbToLAB(rgb),\r\n      locked: false\r\n    }\r\n  }\r\n  \r\n  const generateNewPalette = useCallback((options: PaletteGenerationOptions) => {\r\n    const { paletteSize, harmonyType, semanticTerms } = options\r\n    \r\n    // Generate HSL colors based on the selected options\r\n    let hslColors: HSLColor[] = []\r\n    \r\n    if (semanticTerms && semanticTerms.length > 0) {\r\n      // Generate colors based on semantic terms\r\n      hslColors = generatePaletteFromSemantics(semanticTerms, paletteSize)\r\n    } else {\r\n      // Generate a random seed color if no semantic terms\r\n      const randomHue = Math.floor(Math.random() * 360)\r\n      const seedColor: HSLColor = [randomHue, 70, 50]\r\n      hslColors = generatePaletteFromSeed(seedColor, paletteSize, harmonyType)\r\n    }\r\n    \r\n    // Convert HSL colors to ColorWithId objects\r\n    const colors = hslColors.map(createColorWithId)\r\n    \r\n    // Create new palette\r\n    const newPalette: Palette = {\r\n      id: uuidv4(),\r\n      name: 'New Palette',\r\n      colors,\r\n      harmony: harmonyType,\r\n      timestamp: Date.now()\r\n    }\r\n    \r\n    // Add current palette to history before updating\r\n    if (currentPalette.colors.length > 0) {\r\n      addToHistory(currentPalette)\r\n    }\r\n    \r\n    setCurrentPalette(newPalette)\r\n    \r\n    // Reset role assignments when creating new palette\r\n    setRoleAssignments({})\r\n    \r\n  }, [currentPalette, addToHistory])\r\n  \r\n  const regeneratePalette = useCallback((options: Partial<PaletteGenerationOptions>) => {\r\n    const { preserveLocked = true, harmonyType } = options\r\n    \r\n    if (currentPalette.colors.length === 0) {\r\n      generateNewPalette({\r\n        paletteSize: 5,\r\n        harmonyType: harmonyType || 'analogous',\r\n        preserveLocked: false,\r\n        mode: 'light'\r\n      })\r\n      return\r\n    }\r\n    \r\n    // Add current palette to history before updating\r\n    addToHistory(currentPalette)\r\n    \r\n    // Find unLocked colors and their indices\r\n    const lockedColors = currentPalette.colors.filter(color => color.locked)\r\n    const lockedIndices = currentPalette.colors\r\n      .map((color, index) => color.locked ? index : -1)\r\n      .filter(index => index !== -1)\r\n    \r\n    // Find a seed color (first unlocked color or first color if all are locked)\r\n    let seedColor: HSLColor\r\n    const unlockedColor = currentPalette.colors.find(c => !c.locked)\r\n    \r\n    if (unlockedColor) {\r\n      seedColor = unlockedColor.hsl\r\n    } else if (currentPalette.colors.length > 0) {\r\n      seedColor = currentPalette.colors[0].hsl\r\n    } else {\r\n      // Fallback to random hue\r\n      seedColor = [Math.floor(Math.random() * 360), 70, 50]\r\n    }\r\n    \r\n    // Generate new HSL colors\r\n    const newHarmony = harmonyType || currentPalette.harmony\r\n    const hslColors = generatePaletteFromSeed(\r\n      seedColor, \r\n      currentPalette.colors.length, \r\n      newHarmony\r\n    )\r\n    \r\n    // Replace unlocked colors with new generated ones\r\n    let newColors: ColorWithId[]\r\n    \r\n    if (preserveLocked && lockedColors.length > 0) {\r\n      newColors = [...currentPalette.colors]\r\n      \r\n      currentPalette.colors.forEach((color, index) => {\r\n        if (!color.locked) {\r\n          const hslIndex = index - lockedIndices.filter(i => i < index).length\r\n          const newHsl = hslColors[hslIndex >= 0 && hslIndex < hslColors.length ? hslIndex : 0]\r\n          const rgb = hslToRGB(newHsl)\r\n          \r\n          newColors[index] = {\r\n            ...color,\r\n            rgb,\r\n            hex: rgbToHex(rgb),\r\n            hsl: newHsl,\r\n            lab: rgbToLAB(rgb)\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      // Don't preserve locks - regenerate all colors\r\n      newColors = hslColors.map(createColorWithId)\r\n    }\r\n    \r\n    setCurrentPalette({\r\n      ...currentPalette,\r\n      colors: newColors,\r\n      harmony: newHarmony,\r\n      timestamp: Date.now()\r\n    })\r\n  }, [currentPalette, generateNewPalette, addToHistory])\r\n  \r\n  const updateColor = useCallback((colorId: string, updates: Partial<ColorWithId>) => {\r\n    setCurrentPalette(prev => {\r\n      const updatedColors = prev.colors.map(color => {\r\n        if (color.id === colorId) {\r\n          return { ...color, ...updates }\r\n        }\r\n        return color\r\n      })\r\n      \r\n      return {\r\n        ...prev,\r\n        colors: updatedColors,\r\n        timestamp: Date.now()\r\n      }\r\n    })\r\n  }, [])\r\n  \r\n  const lockColor = useCallback((colorId: string, locked: boolean) => {\r\n    updateColor(colorId, { locked })\r\n  }, [updateColor])\r\n  \r\n  const updateRoleAssignments = useCallback((assignments: UIColorRoleAssignments) => {\r\n    setRoleAssignments(assignments)\r\n  }, [])\r\n  \r\n  const reorderColors = useCallback((startIndex: number, endIndex: number) => {\r\n    setCurrentPalette(prev => {\r\n      const result = [...prev.colors]\r\n      const [removed] = result.splice(startIndex, 1)\r\n      result.splice(endIndex, 0, removed)\r\n      \r\n      return {\r\n        ...prev,\r\n        colors: result,\r\n        timestamp: Date.now()\r\n      }\r\n    })\r\n  }, [])\r\n  \r\n  const updatePalette = useCallback((palette: Palette) => {\r\n    setCurrentPalette(palette)\r\n  }, [])\r\n\r\n  return (\r\n    <PaletteContext.Provider \r\n      value={{\r\n        currentPalette,\r\n        generateNewPalette,\r\n        regeneratePalette,\r\n        updateColor,\r\n        lockColor,\r\n        updateRoleAssignments,\r\n        roleAssignments,\r\n        reorderColors,\r\n        updatePalette,\r\n        setCurrentPalette\r\n      }}\r\n    >\r\n      {children}\r\n    </PaletteContext.Provider>\r\n  )\r\n}\r\n","import { createContext, useState, ReactNode, useEffect } from 'react';\r\n\r\ninterface Settings {\r\n  paletteSize: number;\r\n  mode: 'light' | 'dark' | 'both';\r\n  showTooltips: boolean;\r\n  autoApplyRoles: boolean;\r\n  enforceAccessibility: boolean;\r\n  accessibilityLevel: 'AA' | 'AAA';\r\n}\r\n\r\ninterface SettingsContextType {\r\n  settings: Settings;\r\n  updateSettings: (newSettings: Partial<Settings>) => void;\r\n  resetSettings: () => void;\r\n}\r\n\r\nconst DEFAULT_SETTINGS: Settings = {\r\n  paletteSize: 5,\r\n  mode: 'light',\r\n  showTooltips: true,\r\n  autoApplyRoles: true,\r\n  enforceAccessibility: true,\r\n  accessibilityLevel: 'AA'\r\n};\r\n\r\nexport const SettingsContext = createContext<SettingsContextType>({\r\n  settings: DEFAULT_SETTINGS,\r\n  updateSettings: () => {},\r\n  resetSettings: () => {}\r\n});\r\n\r\ninterface SettingsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const SettingsProvider = ({ children }: SettingsProviderProps) => {\r\n  const [settings, setSettings] = useState<Settings>(() => {\r\n    const savedSettings = localStorage.getItem('colorGeneratorSettings');\r\n    return savedSettings ? JSON.parse(savedSettings) : DEFAULT_SETTINGS;\r\n  });\r\n  \r\n  useEffect(() => {\r\n    localStorage.setItem('colorGeneratorSettings', JSON.stringify(settings));\r\n  }, [settings]);\r\n  \r\n  const updateSettings = (newSettings: Partial<Settings>) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      ...newSettings\r\n    }));\r\n  };\r\n  \r\n  const resetSettings = () => {\r\n    setSettings(DEFAULT_SETTINGS);\r\n  };\r\n  \r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        settings,\r\n        updateSettings,\r\n        resetSettings\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport './Header.css';\r\n\r\ninterface HeaderProps {\r\n  toggleSidebar?: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ toggleSidebar }) => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <header className=\"app-header\">\r\n      <div className=\"header-left\">\r\n        <button \r\n          className=\"sidebar-toggle\" \r\n          onClick={toggleSidebar}\r\n          aria-label=\"Toggle navigation sidebar\"\r\n        >\r\n          ☰\r\n        </button>\r\n        <h1 className=\"app-title\">Ultimate Color Generator</h1>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <button \r\n          className=\"theme-toggle\" \r\n          onClick={toggleTheme}\r\n          aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}\r\n        >\r\n          {theme === 'light' ? '🌙' : '☀️'}\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Sidebar.css';\r\n\r\ninterface SidebarProps {\r\n  collapsed?: boolean;\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ collapsed = false }) => {\r\n  const navItems = [\r\n    { path: '/', label: 'Generate', icon: '🎨' },\r\n    { path: '/preview', label: 'Preview', icon: '👁️' },\r\n  ];\r\n  \r\n  return (\r\n    <nav className={`sidebar ${collapsed ? 'collapsed' : ''}`}>\r\n      <ul className=\"nav-list\">\r\n        {navItems.map(item => (\r\n          <li key={item.path} className=\"nav-item\">\r\n            <NavLink \r\n              to={item.path}\r\n              className={({ isActive }) => isActive ? 'active' : ''}\r\n            >\r\n              <span className=\"nav-icon\">{item.icon}</span>\r\n              {!collapsed && <span className=\"nav-label\">{item.label}</span>}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState } from 'react';\r\nimport { HSLColor, HarmonyType } from '../types/color';\r\nimport { hslToRGB } from '../algorithms/colorModels/conversions';\r\nimport { rgbToHex } from '../algorithms/colorModels/rgb';\r\nimport { generatePaletteFromSeed } from '../algorithms/generation/seedBased';\r\nimport './GeneratePage.css';\r\n\r\nconst GeneratePage = () => {\r\n  const [palette, setPalette] = useState<Array<{hsl: HSLColor, hex: string}>>([]);\r\n  const [paletteSize, setPaletteSize] = useState(5);\r\n  const [harmonyType, setHarmonyType] = useState<HarmonyType>('analogous');\r\n\r\n  const generatePalette = () => {\r\n    // Generate a random seed color\r\n    const randomHue = Math.floor(Math.random() * 360);\r\n    const seedColor: HSLColor = [randomHue, 70, 50];\r\n    \r\n    // Generate palette using algorithm\r\n    const hslColors = generatePaletteFromSeed(seedColor, paletteSize, harmonyType);\r\n    \r\n    // Convert to hex and store\r\n    const newPalette = hslColors.map(hsl => {\r\n      const rgb = hslToRGB(hsl);\r\n      return {\r\n        hsl,\r\n        hex: rgbToHex(rgb)\r\n      };\r\n    });\r\n    \r\n    setPalette(newPalette);\r\n  };\r\n\r\n  return (\r\n    <div className=\"generate-page\">\r\n      <h1>Ultimate Color Generator</h1>\r\n      \r\n      <div className=\"controls\">\r\n        <label>\r\n          Palette Size:\r\n          <select \r\n            value={paletteSize} \r\n            onChange={(e) => setPaletteSize(parseInt(e.target.value))}\r\n          >\r\n            <option value=\"3\">3</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"7\">7</option>\r\n          </select>\r\n        </label>\r\n        \r\n        <label>\r\n          Harmony:\r\n          <select \r\n            value={harmonyType} \r\n            onChange={(e) => setHarmonyType(e.target.value as HarmonyType)}\r\n          >\r\n            <option value=\"analogous\">Analogous</option>\r\n            <option value=\"complementary\">Complementary</option>\r\n            <option value=\"triadic\">Triadic</option>\r\n            <option value=\"tetradic\">Tetradic</option>\r\n            <option value=\"splitComplementary\">Split Complementary</option>\r\n            <option value=\"monochromatic\">Monochromatic</option>\r\n          </select>\r\n        </label>\r\n        \r\n        <button className=\"generate-button\" onClick={generatePalette}>\r\n          Generate Palette\r\n        </button>\r\n      </div>\r\n      \r\n      {palette.length > 0 && (\r\n        <div className=\"palette-display\">\r\n          {palette.map((color, index) => (\r\n            <div \r\n              key={index} \r\n              className=\"color-swatch\"\r\n              style={{backgroundColor: color.hex}}\r\n            >\r\n              <span className=\"color-info\">{color.hex}</span>\r\n              <span className=\"color-info\">\r\n                HSL: {Math.round(color.hsl[0])}°, {Math.round(color.hsl[1])}%, {Math.round(color.hsl[2])}%\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      {palette.length === 0 && (\r\n        <div className=\"placeholder\">\r\n          <p>Click \"Generate Palette\" to create your first color palette!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneratePage;\r\n","import { useContext } from 'react'\r\nimport { PaletteContext } from '../context/PaletteContext'\r\nimport { HistoryContext } from '../context/HistoryContext'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\nimport { PaletteGenerationOptions, PaletteAdjustmentOptions } from '../types/palette'\r\nimport { ColorWithId, HSLColor } from '../types/color'\r\nimport { hslToRGB, rgbToHSL } from '../algorithms/colorModels/conversions'\r\nimport { rgbToHex } from '../algorithms/colorModels/rgb'\r\nimport { rgbToLAB } from '../algorithms/colorModels/conversions'\r\n\r\nexport function usePalette() {\r\n  const paletteContext = useContext(PaletteContext)\r\n  const historyContext = useContext(HistoryContext)\r\n  const { settings } = useContext(SettingsContext)\r\n  \r\n  const generatePalette = (options?: Partial<PaletteGenerationOptions>) => {\r\n    const defaultOptions: PaletteGenerationOptions = {\r\n      paletteSize: settings.paletteSize,\r\n      harmonyType: 'analogous',\r\n      preserveLocked: true,\r\n      mode: settings.mode\r\n    }\r\n    \r\n    paletteContext.generateNewPalette({\r\n      ...defaultOptions,\r\n      ...options\r\n    })\r\n  }\r\n  \r\n  const adjustPalette = (options: PaletteAdjustmentOptions) => {\r\n    // Create a copy of the current colors to modify\r\n    const adjustedColors = paletteContext.currentPalette.colors.map((color, index) => {\r\n      // Skip locked colors if preserveLocked is true\r\n      if (options.preserveLocked && color.locked) {\r\n        return color\r\n      }\r\n      \r\n      const [h, s, l] = color.hsl\r\n      let newH = h\r\n      let newS = s\r\n      let newL = l\r\n      \r\n      // Apply hue shift if provided\r\n      if (options.hueShift !== undefined) {\r\n        newH = (h + options.hueShift) % 360\r\n        if (newH < 0) newH += 360\r\n      }\r\n      \r\n      // Apply saturation multiplier if provided\r\n      if (options.saturationMultiplier !== undefined) {\r\n        newS = Math.max(0, Math.min(100, s * options.saturationMultiplier))\r\n      }\r\n      \r\n      // Apply lightness multiplier if provided\r\n      if (options.lightnessMultiplier !== undefined) {\r\n        newL = Math.max(0, Math.min(100, l * options.lightnessMultiplier))\r\n      }\r\n      \r\n      // Only update if something changed\r\n      if (newH !== h || newS !== s || newL !== l) {\r\n        const newHSL: HSLColor = [newH, newS, newL]\r\n        const newRGB = hslToRGB(newHSL)\r\n        \r\n        return {\r\n          ...color,\r\n          rgb: newRGB,\r\n          hex: rgbToHex(newRGB),\r\n          hsl: newHSL,\r\n          lab: rgbToLAB(newRGB)\r\n        }\r\n      }\r\n      \r\n      return color\r\n    })\r\n    \r\n    // Add current palette to history\r\n    historyContext.addToHistory(paletteContext.currentPalette)\r\n    \r\n    // Update the palette with adjusted colors\r\n    // Using regeneratePalette instead of updatePalette\r\n    const newPalette = {\r\n      ...paletteContext.currentPalette,\r\n      colors: adjustedColors,\r\n      timestamp: Date.now()\r\n    }\r\n    paletteContext.regeneratePalette({\r\n      preserveLocked: options.preserveLocked\r\n    })\r\n  }\r\n  \r\n  const undo = () => {\r\n    const previousPalette = historyContext.undo()\r\n    if (previousPalette) {\r\n      // Use regeneratePalette instead of setCurrentPalette\r\n      paletteContext.regeneratePalette({\r\n        // Adding required options\r\n        harmonyType: previousPalette.harmony,\r\n        preserveLocked: true\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  \r\n  const redo = () => {\r\n    const nextPalette = historyContext.redo()\r\n    if (nextPalette) {\r\n      // Use regeneratePalette instead of setCurrentPalette\r\n      paletteContext.regeneratePalette({\r\n        // Adding required options\r\n        harmonyType: nextPalette.harmony,\r\n        preserveLocked: true\r\n      })\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  \r\n  return {\r\n    ...paletteContext,\r\n    generatePalette,\r\n    adjustPalette,\r\n    undo,\r\n    redo,\r\n    canUndo: historyContext.canUndo,\r\n    canRedo: historyContext.canRedo\r\n  }\r\n}\r\n","import { usePalette } from '../../hooks/usePalette'\r\nimport { useContext } from 'react'\r\nimport { ThemeContext } from '../../context/ThemeContext'\r\nimport './WebpageMock.css'\r\n\r\nconst WebpageMock = () => {\r\n  const { roleAssignments, currentPalette } = usePalette()\r\n  const { theme } = useContext(ThemeContext)\r\n  \r\n  // Helper function to get a color by role, with fallbacks\r\n  const getColorByRole = (role: string) => {\r\n    // Find assigned color\r\n    if (roleAssignments[role]) {\r\n      const color = currentPalette.colors.find(c => c.id === roleAssignments[role])\r\n      if (color) return color.hex\r\n    }\r\n    \r\n    // Default colors based on theme\r\n    const defaults = {\r\n      light: {\r\n        primary: '#1a73e8',\r\n        secondary: '#6c757d',\r\n        accent: '#ff8a65',\r\n        background: '#ffffff',\r\n        surface: '#f5f5f5',\r\n        text: '#212121',\r\n        border: '#e0e0e0',\r\n        success: '#4caf50',\r\n        warning: '#ff9800',\r\n        error: '#f44336',\r\n        info: '#2196f3'\r\n      },\r\n      dark: {\r\n        primary: '#90caf9',\r\n        secondary: '#b0bec5',\r\n        accent: '#ff8a65',\r\n        background: '#121212',\r\n        surface: '#222222',\r\n        text: '#ffffff',\r\n        border: '#424242',\r\n        success: '#81c784',\r\n        warning: '#ffb74d',\r\n        error: '#e57373',\r\n        info: '#64b5f6'\r\n      }\r\n    }\r\n    \r\n    // Use TypeScript type assertion to address the indexing issue\r\n    const themeDefaults = defaults[theme as keyof typeof defaults]\r\n    return themeDefaults[role as keyof typeof themeDefaults] || themeDefaults.background\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"webpage-mock\"\r\n      style={{ \r\n        backgroundColor: getColorByRole('background'),\r\n        color: getColorByRole('text')\r\n      }}\r\n    >\r\n      <header \r\n        className=\"mock-header\"\r\n        style={{ backgroundColor: getColorByRole('primary') }}\r\n      >\r\n        <div className=\"header-content\">\r\n          <div className=\"logo\" style={{ color: '#ffffff' }}>Brand Logo</div>\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"#\" style={{ color: '#ffffff' }}>Home</a></li>\r\n              <li><a href=\"#\" style={{ color: '#ffffff' }}>About</a></li>\r\n              <li><a href=\"#\" style={{ color: '#ffffff' }}>Services</a></li>\r\n              <li><a href=\"#\" style={{ color: '#ffffff' }}>Contact</a></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"mock-hero\">\r\n        <div className=\"hero-content\">\r\n          <h1>Welcome to Your Website</h1>\r\n          <p>This preview shows how your color palette looks in a standard web layout.</p>\r\n          <button\r\n            style={{ \r\n              backgroundColor: getColorByRole('accent'),\r\n              color: '#ffffff'\r\n            }}\r\n          >\r\n            Get Started\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <main className=\"mock-content\">\r\n        <section className=\"features\">\r\n          <h2>Key Features</h2>\r\n          \r\n          <div className=\"feature-cards\">\r\n            {[1, 2, 3].map(i => (\r\n              <div \r\n                key={i}\r\n                className=\"feature-card\"\r\n                style={{ \r\n                  backgroundColor: getColorByRole('surface'),\r\n                  borderColor: getColorByRole('border')\r\n                }}\r\n              >\r\n                <div \r\n                  className=\"feature-icon\"\r\n                  style={{ backgroundColor: getColorByRole('secondary') }}\r\n                ></div>\r\n                <h3>Feature {i}</h3>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                <a \r\n                  href=\"#\" \r\n                  style={{ color: getColorByRole('primary') }}\r\n                >\r\n                  Learn more\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n        \r\n        <section className=\"cta-section\">\r\n          <h2>Ready to get started?</h2>\r\n          <p>Join thousands of satisfied customers using our product.</p>\r\n          <div className=\"cta-buttons\">\r\n            <button\r\n              className=\"primary-btn\"\r\n              style={{ \r\n                backgroundColor: getColorByRole('primary'),\r\n                color: '#ffffff'\r\n              }}\r\n            >\r\n              Sign Up\r\n            </button>\r\n            <button\r\n              className=\"secondary-btn\"\r\n              style={{ \r\n                backgroundColor: 'transparent',\r\n                color: getColorByRole('secondary'),\r\n                borderColor: getColorByRole('secondary')\r\n              }}\r\n            >\r\n              Learn More\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      \r\n      <footer \r\n        className=\"mock-footer\"\r\n        style={{ \r\n          backgroundColor: theme === 'light' ? getColorByRole('surface') : getColorByRole('background'),\r\n          borderTopColor: getColorByRole('border')\r\n        }}\r\n      >\r\n        <div className=\"footer-content\">\r\n          <div className=\"footer-logo\">Brand Logo</div>\r\n          <div className=\"footer-links\">\r\n            <ul>\r\n              <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Home</a></li>\r\n              <li><a href=\"#\" style={{ color: getColorByRole('text') }}>About</a></li>\r\n              <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Services</a></li>\r\n              <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Contact</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"copyright\" style={{ color: getColorByRole('text') }}>\r\n          © 2023 Your Company. All rights reserved.\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WebpageMock\r\n","import React from 'react';\r\nimport { usePalette } from '../../hooks/usePalette';\r\nimport { useContext } from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport './DashboardMock.css';\r\n\r\nconst DashboardMock: React.FC = () => {\r\n  const { roleAssignments, currentPalette } = usePalette();\r\n  const { theme } = useContext(ThemeContext);\r\n  \r\n  // Helper function to get color by role\r\n  const getColorByRole = (role: string) => {\r\n    // Find assigned color\r\n    if (roleAssignments[role]) {\r\n      const color = currentPalette.colors.find(c => c.id === roleAssignments[role]);\r\n      if (color) return color.hex;\r\n    }\r\n    \r\n    // Default fallback\r\n    return theme === 'light' ? '#f5f5f5' : '#333333';\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"dashboard-mock\"\r\n      style={{ \r\n        backgroundColor: getColorByRole('background'),\r\n        color: getColorByRole('text')\r\n      }}\r\n    >\r\n      <header \r\n        className=\"mock-sidebar\"\r\n        style={{ backgroundColor: getColorByRole('surface') }}\r\n      >\r\n        <div className=\"logo\" style={{ color: getColorByRole('primary') }}>DashBoard</div>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Dashboard</a></li>\r\n            <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Analytics</a></li>\r\n            <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Users</a></li>\r\n            <li><a href=\"#\" style={{ color: getColorByRole('text') }}>Settings</a></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      \r\n      <main className=\"dashboard-content\">\r\n        <div \r\n          className=\"dashboard-header\"\r\n          style={{ borderBottom: `1px solid ${getColorByRole('border')}` }}\r\n        >\r\n          <h1>Dashboard Preview</h1>\r\n        </div>\r\n        \r\n        <div className=\"dashboard-cards\">\r\n          {[1, 2, 3, 4].map(i => (\r\n            <div \r\n              key={i}\r\n              className=\"dashboard-card\"\r\n              style={{ \r\n                backgroundColor: getColorByRole('surface'),\r\n                borderColor: getColorByRole('border')\r\n              }}\r\n            >\r\n              <h3>Card Title {i}</h3>\r\n              <div className=\"card-value\">{Math.floor(Math.random() * 100)}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMock;\r\n","import React from 'react';\r\nimport { usePalette } from '../../hooks/usePalette';\r\nimport { useContext } from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport './MobileMock.css';\r\n\r\nconst MobileMock: React.FC = () => {\r\n  const { roleAssignments, currentPalette } = usePalette();\r\n  const { theme } = useContext(ThemeContext);\r\n  \r\n  // Helper function to get color by role\r\n  const getColorByRole = (role: string) => {\r\n    // Find assigned color\r\n    if (roleAssignments[role]) {\r\n      const color = currentPalette.colors.find(c => c.id === roleAssignments[role]);\r\n      if (color) return color.hex;\r\n    }\r\n    \r\n    // Default fallback\r\n    return theme === 'light' ? '#ffffff' : '#121212';\r\n  };\r\n\r\n  return (\r\n    <div className=\"mobile-mock-container\">\r\n      <div \r\n        className=\"mobile-device\"\r\n        style={{ borderColor: theme === 'light' ? '#d1d1d1' : '#333333' }}\r\n      >\r\n        <div \r\n          className=\"mobile-screen\"\r\n          style={{ backgroundColor: getColorByRole('background') }}\r\n        >\r\n          <div \r\n            className=\"mobile-status-bar\"\r\n            style={{ backgroundColor: getColorByRole('primary') }}\r\n          >\r\n            <span style={{ color: '#ffffff' }}>12:30</span>\r\n          </div>\r\n          \r\n          <div className=\"mobile-content\">\r\n            <h2 style={{ color: getColorByRole('text') }}>Mobile App</h2>\r\n            \r\n            <div \r\n              className=\"mobile-card\"\r\n              style={{ \r\n                backgroundColor: getColorByRole('surface'),\r\n                borderColor: getColorByRole('border')\r\n              }}\r\n            >\r\n              <h3 style={{ color: getColorByRole('text') }}>Welcome</h3>\r\n              <p style={{ color: getColorByRole('text') }}>This is a preview of your mobile app colors.</p>\r\n              <button\r\n                style={{ \r\n                  backgroundColor: getColorByRole('accent'),\r\n                  color: '#ffffff'\r\n                }}\r\n              >\r\n                Get Started\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"mobile-menu\">\r\n              <div \r\n                className=\"menu-item\"\r\n                style={{ color: getColorByRole('primary') }}\r\n              >\r\n                Home\r\n              </div>\r\n              <div \r\n                className=\"menu-item\"\r\n                style={{ color: getColorByRole('text') }}\r\n              >\r\n                Profile\r\n              </div>\r\n              <div \r\n                className=\"menu-item\"\r\n                style={{ color: getColorByRole('text') }}\r\n              >\r\n                Settings\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMock;\r\n","import React from 'react';\r\nimport { usePalette } from '../../hooks/usePalette';\r\nimport { useContext } from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport './EmailMock.css';\r\n\r\nconst EmailMock: React.FC = () => {\r\n  const { roleAssignments, currentPalette } = usePalette();\r\n  const { theme } = useContext(ThemeContext);\r\n  \r\n  // Helper function to get color by role\r\n  const getColorByRole = (role: string) => {\r\n    // Find assigned color\r\n    if (roleAssignments[role]) {\r\n      const color = currentPalette.colors.find(c => c.id === roleAssignments[role]);\r\n      if (color) return color.hex;\r\n    }\r\n    \r\n    // Default fallback\r\n    return theme === 'light' ? '#ffffff' : '#121212';\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-mock-container\">\r\n      <div \r\n        className=\"email-preview\"\r\n        style={{ \r\n          backgroundColor: '#f5f5f5',\r\n          padding: '20px'\r\n        }}\r\n      >\r\n        <div \r\n          className=\"email-card\"\r\n          style={{ \r\n            backgroundColor: getColorByRole('background'),\r\n            color: getColorByRole('text'),\r\n            border: `1px solid ${getColorByRole('border')}`\r\n          }}\r\n        >\r\n          <div \r\n            className=\"email-header\"\r\n            style={{ backgroundColor: getColorByRole('primary') }}\r\n          >\r\n            <h2 style={{ color: '#ffffff' }}>Company Newsletter</h2>\r\n          </div>\r\n          \r\n          <div className=\"email-body\">\r\n            <h3 style={{ color: getColorByRole('secondary') }}>\r\n              Welcome to Our Newsletter\r\n            </h3>\r\n            \r\n            <p style={{ color: getColorByRole('text') }}>\r\n              Thank you for subscribing to our newsletter. \r\n              Here's what's new this month.\r\n            </p>\r\n            \r\n            <div \r\n              className=\"email-callout\"\r\n              style={{ \r\n                backgroundColor: getColorByRole('surface'), \r\n                borderLeft: `4px solid ${getColorByRole('accent')}`\r\n              }}\r\n            >\r\n              <p style={{ color: getColorByRole('text') }}>\r\n                <strong>Special Offer:</strong> Use code WELCOME10 for 10% off your first purchase.\r\n              </p>\r\n            </div>\r\n            \r\n            <button\r\n              style={{ \r\n                backgroundColor: getColorByRole('accent'),\r\n                color: '#ffffff'\r\n              }}\r\n            >\r\n              Read More\r\n            </button>\r\n          </div>\r\n          \r\n          <div \r\n            className=\"email-footer\"\r\n            style={{ \r\n              borderTop: `1px solid ${getColorByRole('border')}`,\r\n              color: getColorByRole('text')\r\n            }}\r\n          >\r\n            <p>© 2023 Your Company. All rights reserved.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailMock;\r\n","import React, { useState } from 'react';\r\nimport { usePalette } from '../../hooks/usePalette';\r\nimport './ExportDrawer.css';\r\n\r\ninterface ExportDrawerProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ExportDrawer: React.FC<ExportDrawerProps> = ({ isOpen, onClose }) => {\r\n  const { currentPalette, roleAssignments } = usePalette();\r\n  const [selectedFormats, setSelectedFormats] = useState<string[]>(['css']);\r\n  \r\n  const toggleFormat = (format: string) => {\r\n    if (selectedFormats.includes(format)) {\r\n      setSelectedFormats(selectedFormats.filter(f => f !== format));\r\n    } else {\r\n      setSelectedFormats([...selectedFormats, format]);\r\n    }\r\n  };\r\n  \r\n  const handleExport = () => {\r\n    // Placeholder for export functionality\r\n    console.log('Exporting palette in formats:', selectedFormats);\r\n    onClose();\r\n  };\r\n  \r\n  if (!isOpen) return null;\r\n  \r\n  return (\r\n    <div className=\"export-drawer\">\r\n      <div className=\"drawer-header\">\r\n        <h2>Export Palette</h2>\r\n        <button className=\"close-button\" onClick={onClose} aria-label=\"Close\">\r\n          ×\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"export-options\">\r\n        <h3>Select Formats</h3>\r\n        \r\n        <div className=\"format-checkboxes\">\r\n          <label className=\"format-option\">\r\n            <input \r\n              type=\"checkbox\"\r\n              checked={selectedFormats.includes('css')}\r\n              onChange={() => toggleFormat('css')}\r\n            />\r\n            CSS Variables\r\n          </label>\r\n          \r\n          <label className=\"format-option\">\r\n            <input \r\n              type=\"checkbox\"\r\n              checked={selectedFormats.includes('scss')}\r\n              onChange={() => toggleFormat('scss')}\r\n            />\r\n            SCSS Variables\r\n          </label>\r\n          \r\n          <label className=\"format-option\">\r\n            <input \r\n              type=\"checkbox\"\r\n              checked={selectedFormats.includes('json')}\r\n              onChange={() => toggleFormat('json')}\r\n            />\r\n            JSON\r\n          </label>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"export-actions\">\r\n        <button className=\"export-button\" onClick={handleExport}>\r\n          Export Selected Formats\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportDrawer;\r\n","import { useState } from 'react'\r\nimport ExportDrawer from './ExportDrawer'\r\nimport './ExportButton.css'\r\n\r\ninterface ExportButtonProps {\r\n  disabled?: boolean\r\n}\r\n\r\nconst ExportButton = ({ disabled = false }: ExportButtonProps) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  \r\n  return (\r\n    <>\r\n      <button\r\n        className=\"export-button\"\r\n        onClick={() => setIsOpen(true)}\r\n        disabled={disabled}\r\n      >\r\n        Export Palette\r\n      </button>\r\n      \r\n      <ExportDrawer \r\n        isOpen={isOpen} \r\n        onClose={() => setIsOpen(false)} \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExportButton\r\n","import { useState } from 'react'\r\nimport { usePalette } from '../hooks/usePalette'\r\nimport { ThemeContext } from '../context/ThemeContext'\r\nimport { useContext } from 'react'\r\nimport WebpageMock from '../components/preview/WebpageMock'\r\nimport DashboardMock from '../components/preview/DashboardMock'\r\nimport MobileMock from '../components/preview/MobileMock'\r\nimport EmailMock from '../components/preview/EmailMock'\r\nimport ExportButton from '../components/export/ExportButton'\r\nimport './PreviewPage.css'\r\nimport React from 'react';\r\n\r\ntype PreviewTab = 'webpage' | 'dashboard' | 'mobile' | 'email'\r\n\r\nconst PreviewPage: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<PreviewTab>('webpage')\r\n  const { currentPalette, roleAssignments } = usePalette()\r\n  const { theme, toggleTheme } = useContext(ThemeContext)\r\n\r\n  const hasValidPalette = currentPalette.colors.length > 0\r\n\r\n  const renderTabContent = () => {\r\n    if (!hasValidPalette) {\r\n      return (\r\n        <div className=\"no-palette-message\">\r\n          <h2>No palette available for preview</h2>\r\n          <p>Go to the Generate page to create a palette first.</p>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    switch (activeTab) {\r\n      case 'webpage':\r\n        return <WebpageMock />\r\n      case 'dashboard':\r\n        return <DashboardMock />\r\n      case 'mobile':\r\n        return <MobileMock />\r\n      case 'email':\r\n        return <EmailMock />\r\n      default:\r\n        return <WebpageMock />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"preview-page\">\r\n      <h1>Preview Your Palette</h1>\r\n      <p>This page will show your palette in different contexts:</p>\r\n      <ul>\r\n        <li>Website UI</li>\r\n        <li>Dashboard</li>\r\n        <li>Mobile App</li>\r\n        <li>Email Template</li>\r\n      </ul>\r\n      <div className=\"preview-placeholder\">\r\n        <p>Preview will be available once you've generated a palette.</p>\r\n      </div>\r\n      <div className=\"preview-header\">\r\n        <h1 className=\"page-title\">Preview Your Palette</h1>\r\n        \r\n        <div className=\"preview-controls\">\r\n          <button\r\n            className=\"theme-toggle-button\"\r\n            onClick={toggleTheme}\r\n            disabled={!hasValidPalette}\r\n          >\r\n            {theme === 'light' ? 'Switch to Dark Mode' : 'Switch to Light Mode'}\r\n          </button>\r\n          \r\n          <ExportButton disabled={!hasValidPalette} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"tabs-container\">\r\n        <div className=\"tabs\">\r\n          <button\r\n            className={`tab ${activeTab === 'webpage' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('webpage')}\r\n            disabled={!hasValidPalette}\r\n          >\r\n            Webpage\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === 'dashboard' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('dashboard')}\r\n            disabled={!hasValidPalette}\r\n          >\r\n            Dashboard\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === 'mobile' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('mobile')}\r\n            disabled={!hasValidPalette}\r\n          >\r\n            Mobile\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === 'email' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('email')}\r\n            disabled={!hasValidPalette}\r\n          >\r\n            Email\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"tab-content\">\r\n          {renderTabContent()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PreviewPage\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NotFound.css';\r\n\r\nconst NotFound: React.FC = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h1>404 - Page Not Found</h1>\r\n      <p>The page you're looking for doesn't exist or has been moved.</p>\r\n      <Link to=\"/\" className=\"home-link\">\r\n        Go to Palette Generator\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useState } from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport { ThemeProvider } from './context/ThemeContext'\r\nimport { PaletteProvider } from './context/PaletteContext'\r\nimport { SettingsProvider } from './context/SettingsContext'\r\nimport { HistoryProvider } from './context/HistoryContext'\r\nimport Header from './components/layout/Header'\r\nimport Sidebar from './components/layout/Sidebar'\r\nimport GeneratePage from './pages/GeneratePage'\r\nimport PreviewPage from './pages/PreviewPage'\r\nimport NotFound from './pages/NotFound'\r\nimport './styles/global.css'\r\n\r\nfunction App() {\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(window.innerWidth < 1280)\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarCollapsed(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <SettingsProvider>\r\n        <HistoryProvider>\r\n          <PaletteProvider>\r\n            <div className=\"app-container\">\r\n              <Header toggleSidebar={toggleSidebar} />\r\n              <div className=\"main-content\">\r\n                <Sidebar collapsed={sidebarCollapsed} />\r\n                <div className=\"page-container\">\r\n                  <Routes>\r\n                    <Route path=\"/\" element={<GeneratePage />} />\r\n                    <Route path=\"/preview\" element={<PreviewPage />} />\r\n                    <Route path=\"*\" element={<NotFound />} />\r\n                  </Routes>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </PaletteProvider>\r\n        </HistoryProvider>\r\n      </SettingsProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './styles/global.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n)\r\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","ThemeContext","createContext","ThemeProvider","children","theme","setTheme","useState","savedTheme","useEffect","toggleTheme","current","jsx","getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","generatePaletteFromSeed","seedColor","paletteSize","harmonyType","baseColors","s","generateAnalogousColors","generateMonochromaticColors","additionalCount","additionalColors","generateVariations","count","colors","angle","sideCount","lightness","variations","baseColor","lightnessAdjustment","newLightness","SEMANTIC_MAPPINGS","HARMONY_MAPPINGS","generatePaletteFromSemantics","semanticTerms","combinedMapping","combineSemanticMappings","generateColorFromMapping","determineHarmonyFromSemantics","validTermCount","term","mapping","isHueRangeNarrower","range1","range2","size1","size2","hue","totalRange","randomValue","saturation","HistoryContext","HistoryProvider","maxSize","history","setHistory","currentIndex","setCurrentIndex","addToHistory","useCallback","palette","prev","updatedHistory","undo","newIndex","redo","PaletteContext","PaletteProvider","useContext","currentPalette","setCurrentPalette","uuidv4","roleAssignments","setRoleAssignments","createColorWithId","hsl","rgb","hslToRGB","rgbToHex","rgbToLAB","generateNewPalette","hslColors","newPalette","regeneratePalette","preserveLocked","lockedColors","color","lockedIndices","index","unlockedColor","newHarmony","newColors","hslIndex","newHsl","updateColor","colorId","updates","updatedColors","lockColor","locked","updateRoleAssignments","assignments","reorderColors","startIndex","endIndex","result","removed","updatePalette","DEFAULT_SETTINGS","SettingsContext","SettingsProvider","settings","setSettings","savedSettings","updateSettings","newSettings","resetSettings","Header","toggleSidebar","jsxs","Sidebar","collapsed","navItems","NavLink","item","isActive","GeneratePage","setPalette","setPaletteSize","setHarmonyType","generatePalette","usePalette","paletteContext","historyContext","defaultOptions","adjustedColors","newH","newS","newL","newHSL","newRGB","previousPalette","nextPalette","WebpageMock","getColorByRole","role","themeDefaults","DashboardMock","MobileMock","EmailMock","ExportDrawer","isOpen","onClose","selectedFormats","setSelectedFormats","toggleFormat","format","handleExport","ExportButton","disabled","setIsOpen","Fragment","PreviewPage","activeTab","setActiveTab","hasValidPalette","renderTabContent","NotFound","Link","App","sidebarCollapsed","setSidebarCollapsed","Routes","Route","ReactDOM","React","BrowserRouter"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5,6,7]}